diff --git a/lib/CL/devices/common.c b/lib/CL/devices/common.c
index 6dc18d0e..3df9e783 100644
--- a/lib/CL/devices/common.c
+++ b/lib/CL/devices/common.c
@@ -195,20 +195,27 @@ llvm_codegen (const char* tmpdir, cl_kernel kernel, cl_device_id device,
                          kernel->name, tmp_module);
 
   POCL_MSG_PRINT_INFO ("Linking final module\n");
-  char *const args1[]
 #ifndef POCL_ANDROID
 /* use Clang as linker, when compiler-rt is available and needed */
+  char pocl_link_command[4096]
 #if defined(ENABLE_POCL_FLOAT_CONVERSION) || defined(CLANG_HAS_RTLIB)
-      = { CLANG,
+      = CLANG;
 #else
-      = { LINK_COMMAND,
+      = LINK_COMMAND;
 #endif
+  if (getenv("PYOPENCL_HOME") != NULL) {
+    strcpy(pocl_link_command, getenv("PYOPENCL_HOME"));
+    strcat(pocl_link_command, "/.libs/ld.lld");
+  }
+  char *const args1[]
+      = { pocl_link_command,
           "-o",
           tmp_module,
           tmp_objfile,
-          HOST_LD_FLAGS_ARRAY,
+          "-shared",
           NULL };
 #else
+  char *const args1[]
       = { POCL_ANDROID_PREFIX "/bin/ld",
           "-o",
           tmp_module,
diff --git a/lib/CL/pocl_llvm_build.cc b/lib/CL/pocl_llvm_build.cc
index 601eb729..6ba237ae 100644
--- a/lib/CL/pocl_llvm_build.cc
+++ b/lib/CL/pocl_llvm_build.cc
@@ -412,6 +412,8 @@ int pocl_llvm_build_program(cl_program program,
   std::string kernelh;
   std::string BuiltinRenamesH;
 
+  const char * pyopencl_path = std::getenv("PYOPENCL_HOME");
+
 #ifdef ENABLE_POCL_BUILDING
   if (pocl_get_bool_option("POCL_BUILDING", 0)) {
     kernelh  = SRCDIR;
@@ -419,7 +421,11 @@ int pocl_llvm_build_program(cl_program program,
   if (0) {
 #endif
   } else {
-    kernelh = POCL_INSTALL_PRIVATE_DATADIR;
+    if (pyopencl_path != NULL) {
+       kernelh = std::string(pyopencl_path) + "/.libs/share/pocl";
+    } else {
+       kernelh = POCL_INSTALL_PRIVATE_DATADIR;
+    }
   }
   BuiltinRenamesH = kernelh;
   kernelh += "/include/_kernel.h";
@@ -428,7 +434,11 @@ int pocl_llvm_build_program(cl_program program,
   po.Includes.push_back(BuiltinRenamesH);
 #ifndef LLVM_OLDER_THAN_4_0
   // Use Clang's opencl-c.h header.
-  po.Includes.push_back(CLANG_RESOURCE_DIR "/include/opencl-c.h");
+  if (pyopencl_path != NULL) {
+      po.Includes.push_back(std::string(pyopencl_path) + "/.libs/share/pocl/opencl-c.h");
+  } else {
+      po.Includes.push_back(CLANG_RESOURCE_DIR "/include/opencl-c.h");
+  }
 #endif
   po.Includes.push_back(kernelh);
   clang::TargetOptions &ta = pocl_build.getTargetOpts();
@@ -830,9 +840,17 @@ kernel_library
     kernellib = BUILDDIR;
     kernellib += "/lib/kernel/";
     kernellib += subdir;
-  } else // POCL_BUILDING == 0, use install dir
+  } else {// POCL_BUILDING == 0, use install dir
+#else
+  {
 #endif
-  kernellib = POCL_INSTALL_PRIVATE_DATADIR;
+    const char * pyopencl_path = std::getenv("PYOPENCL_HOME");
+    if (pyopencl_path != NULL) {
+      kernellib = std::string(pyopencl_path) + "/.libs/share/pocl";
+    } else {
+      kernellib = POCL_INSTALL_PRIVATE_DATADIR;
+    }
+  }
   kernellib += "/kernel-";
   kernellib += device->llvm_target_triplet;
   if (is_host) {
